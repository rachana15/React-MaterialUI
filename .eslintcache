[{"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/index.js":"1","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/reportWebVitals.js":"2","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/App/App.js":"3","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/SideMenu.js":"4","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/Header.js":"5","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/PageHeader.js":"6","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/Employees.js":"7","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/EmployeeForm.js":"8","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/UseForm.js":"9","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Services/employeService.js":"10","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/EmployeeTable.js":"11","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/index.js":"12","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/reportWebVitals.js":"13","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/App/App.js":"14","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/SideMenu.js":"15","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/Header.js":"16","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/PageHeader.js":"17","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/Employees.js":"18","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/EmployeeTable.js":"19","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/EmployeeForm.js":"20","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Services/employeService.js":"21","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/UseForm.js":"22","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/Popup.js":"23","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/ActionButton.js":"24"},{"size":460,"mtime":1609966925054,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1609875567000,"results":"27","hashOfConfig":"26"},{"size":1015,"mtime":1609975592418,"results":"28","hashOfConfig":"26"},{"size":443,"mtime":1609951773796,"results":"29","hashOfConfig":"26"},{"size":1891,"mtime":1609951863066,"results":"30","hashOfConfig":"26"},{"size":1573,"mtime":1609951986807,"results":"31","hashOfConfig":"26"},{"size":815,"mtime":1610058765499,"results":"32","hashOfConfig":"26"},{"size":6415,"mtime":1610055947592,"results":"33","hashOfConfig":"26"},{"size":995,"mtime":1610052919246,"results":"34","hashOfConfig":"26"},{"size":1120,"mtime":1610061492878,"results":"35","hashOfConfig":"26"},{"size":11541,"mtime":1610061429678,"results":"36","hashOfConfig":"26"},{"size":460,"mtime":1609966925054,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1609875567000,"results":"39","hashOfConfig":"38"},{"size":916,"mtime":1610141594006,"results":"40","hashOfConfig":"38"},{"size":443,"mtime":1609951773796,"results":"41","hashOfConfig":"38"},{"size":1891,"mtime":1610124994859,"results":"42","hashOfConfig":"38"},{"size":1573,"mtime":1609951986807,"results":"43","hashOfConfig":"38"},{"size":799,"mtime":1610135959081,"results":"44","hashOfConfig":"38"},{"size":14661,"mtime":1610264048192,"results":"45","hashOfConfig":"38"},{"size":6629,"mtime":1610148396521,"results":"46","hashOfConfig":"38"},{"size":1120,"mtime":1610061492878,"results":"47","hashOfConfig":"38"},{"size":995,"mtime":1610052919246,"results":"48","hashOfConfig":"38"},{"size":1274,"mtime":1610148534247,"results":"49","hashOfConfig":"38"},{"size":794,"mtime":1610141479294,"results":"50","hashOfConfig":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1kp5oxw",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"pjmr3f",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/index.js",[],["104","105"],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/reportWebVitals.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/App/App.js",["106","107"],"import {\n  createMuiTheme,\n  CssBaseline,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport Header from \"../Components/Header\";\nimport PageHeader from \"../Components/PageHeader\";\nimport SideMenu from \"../Components/SideMenu\";\nimport \"./App.css\";\n\nimport Employees from \"../Pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: \"#3c44b126\",\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: \"#f832456\",\n    },\n    background: {\n      default: \"#f4f5fd\",\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  header: {\n    // paddingLeft: \"320px !important\",\n    width: \"100%\",\n  },\n});\nfunction App() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"app\">\n        {/* <SideMenu /> */}\n        <div className={classes.header}>\n          <Header />\n          <Employees />\n        </div>\n\n        <CssBaseline />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/SideMenu.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/Header.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/PageHeader.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/Employees.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/EmployeeForm.js",["108","109"],"import {\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Form, UseForm } from \"../../Components/UseForm\";\nimport * as employeeService from \"../../Services/employeService\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst initialFieldValues = {\n  id: 0,\n  email: \"\",\n  fullName: \"\",\n  mobile: \"\",\n  city: \"\",\n  gender: \"female\",\n  departmentId: \"\",\n  hireDate: new Date(),\n  isPermanent: true,\n};\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(0.5),\n  },\n  label: {\n    textTransform: \"none\",\n  },\n}));\n\nfunction EmployeeForm() {\n  //Validation function\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    const newLocal = /$^|.+@.+..+/;\n\n    if (\"email\" in fieldValues)\n      temp.email = newLocal.test(fieldValues.email) ? null : \"Invalid email\";\n    if (\"mobile\" in fieldValues)\n      temp.mobile =\n        fieldValues.mobile.length > 9 ? null : \"Minimum of 9 numbers required\";\n    if (\"departmentID\" in fieldValues)\n      temp.departmentId =\n        fieldValues.departmentId.length !== 0 ? null : \"This field is required\";\n\n    setErrors({ ...temp });\n    // console.log(errors);\n\n    if (fieldValues == values)\n      return Object.values(temp).every((x) => x == null);\n  };\n\n  //resuable variables and functions\n  const { values, setValues, handleInputChange, errors, setErrors } = UseForm(\n    initialFieldValues,\n    true,\n    validate\n  );\n  const classes = useStyle();\n  const handleCheckedInput = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.checked });\n  };\n  const handleDateChange = (name, date) => {\n    setValues({ ...values, [name]: date });\n  };\n  const resetForm = () => {\n    setValues(initialFieldValues);\n    setErrors({});\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            variant=\"outlined\"\n            value={values.fullName}\n            name=\"fullName\"\n            label=\"Full name\"\n            onChange={handleInputChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            value={values.email}\n            label=\"Email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            {...(errors.email && { error: true, helperText: \"Invalid Email\" })}\n          />\n          <TextField\n            variant=\"outlined\"\n            value={values.city}\n            label=\"City\"\n            name=\"city\"\n            onChange={handleInputChange}\n          />\n          <TextField\n            required\n            variant=\"outlined\"\n            value={values.mobile}\n            label=\"Mobile\"\n            name=\"mobile\"\n            onChange={handleInputChange}\n            {...(errors.mobile && {\n              error: true,\n              helperText: \"Minimum of 9 numbers required\",\n            })}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl>\n            <FormLabel>Gender</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"gender\"\n              name=\"gender\"\n              value={values.gender}\n              onChange={handleInputChange}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <FormControl varient=\"outlined\" required>\n            <InputLabel>Department</InputLabel>\n            <Select\n              labelId=\"Department\"\n              name=\"departmentId\"\n              value={values.departmentId}\n              onChange={handleInputChange}\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {employeeService.getDepartmentCollection().map((option) => (\n                <MenuItem key={option.id} value={option.id}>\n                  {option.title}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={values.isPermanent}\n                  onChange={handleCheckedInput}\n                  name=\"isPermanent\"\n                />\n              }\n              label=\"Permanent Employee\"\n            />\n          </FormControl>\n          <FormControl>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container justify=\"space-around\">\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  label=\"Hire Date\"\n                  name=\"hireDate\"\n                  value={values.hireDate}\n                  onChange={(date) => handleDateChange(\"hireDate\", date)}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}></Grid>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            type=\"submit\"\n            classes={{ root: classes.root, label: classes.label }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            classes={{ root: classes.root, label: classes.label }}\n            type=\"reset\"\n            onClick={resetForm}\n          >\n            Reset\n          </Button>\n        </div>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default EmployeeForm;\n","/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Components/UseForm.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Services/employeService.js",[],"/Users/rachanabhaskar/Desktop/imp/projects/react-materialui/src/Pages/Employees/EmployeeTable.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/index.js",[],["110","111"],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/reportWebVitals.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/App/App.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/SideMenu.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/Header.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/PageHeader.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/Employees.js",["112"],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/EmployeeTable.js",["113","114"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { getEmployees } from \"../../Services/employeService\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Popup from \"../../Components/Popup\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport * as employeeService from \"../../Services/employeService\";\nimport ActionButton from \"../../Components/ActionButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n// const rows = getEmployees();\n// console.log(\"rows>>>>>>>>>\", rows);\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: \"id\", numeric: true, disablePadding: false, label: \"ID\" },\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Full Name\",\n  },\n  { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\n  { id: \"mobile\", numeric: true, disablePadding: false, label: \"Mobile\" },\n  { id: \"city\", numeric: false, disablePadding: false, label: \"City\" },\n  { id: \"gender\", numeric: false, disablePadding: false, label: \"Gender\" },\n  {\n    id: \"department\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Department\",\n  },\n  { id: \"date\", numeric: true, disablePadding: false, label: \"Hire Date\" },\n  { id: \"actions\", label: \"actions\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all employees\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <>\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}\n      >\n        {numSelected > 0 ? (\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            Employees\n          </Typography>\n        )}\n\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\">\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    paddingTop: theme.spacing(2),\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  serachBar: {\n    width: \"80%\",\n    marginTop: \"50px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingTop: \"10px\",\n    \"& .MuiFormControl-root\": {\n      width: \"80%\",\n    },\n  },\n}));\n\nexport function EnhancedTable() {\n  const classes = useStyles();\n  const [rows, setRows] = React.useState(getEmployees());\n  const [editRow, setEditRow] = React.useState(null);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [openPopup, setOpenPopup] = React.useState(false);\n  const [clearForm, setClearForm] = React.useState(false);\n  const [filterFn, setFilterFn] = React.useState({\n    fn: (items) => {\n      return items;\n    },\n  });\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.fullName);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleSearch = (e) => {\n    let target = e.target;\n    setFilterFn({\n      fn: (items) => {\n        if (target.value == \"\") return rows;\n        else\n          return items.filter((x) =>\n            x.fullName.toLowerCase().includes(target.value)\n          );\n      },\n    });\n  };\n\n  const addOrEdit = (employee, resetForm) => {\n    employeeService.insertEmployee(employee);\n    // resetForm();\n    setOpenPopup(false);\n    setRows(getEmployees());\n  };\n\n  const openInPopup = (row) => {\n    setEditRow(row);\n    setOpenPopup(true);\n  };\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper} elevation={2}>\n        <Toolbar className={classes.toolbar}>\n          <TextField\n            variant=\"outlined\"\n            label=\"Search Employees\"\n            startadornment={<SearchIcon fontSize=\"small\" />}\n            onChange={handleSearch}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            startIcon={<AddIcon />}\n            onClick={() => {\n              setOpenPopup(true);\n            }}\n          >\n            Add New\n          </Button>\n        </Toolbar>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(filterFn.fn(rows), getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.fullName);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.fullName)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.fullName}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell>{row.id}</TableCell>\n\n                      <TableCell\n                        align=\"right\"\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.fullName}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.mobile}</TableCell>\n                      <TableCell align=\"right\">{row.city}</TableCell>\n                      <TableCell align=\"right\">{row.gender}</TableCell>\n                      <TableCell align=\"right\">{row.department}</TableCell>\n                      <TableCell align=\"right\">{row.hireDate}</TableCell>\n                      <TableCell>\n                        <ActionButton color=\"primary\">\n                          <EditIcon\n                            fontSize=\"small\"\n                            onClick={() => {\n                              openInPopup(row);\n                            }}\n                          />\n                        </ActionButton>\n                        <ActionButton color=\"primary\">\n                          <DeleteIcon fontSize=\"small\" />\n                        </ActionButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n      <Popup\n        open={openPopup}\n        setOpenPopup={setOpenPopup}\n        title=\"Add New Employee\"\n      >\n        <EmployeeForm\n          addOrEdit={addOrEdit}\n          editRow={editRow}\n          clearForm={clearForm}\n        />\n      </Popup>\n    </div>\n  );\n}\n","/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Pages/Employees/EmployeeForm.js",["115","116","117"],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Services/employeService.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/UseForm.js",[],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/Popup.js",["118"],"/Users/rachanabhaskar/Desktop/Imp/projects/react-materialui/src/Components/ActionButton.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":66,"column":21,"nodeType":"131","messageId":"132","endLine":66,"endColumn":23},{"ruleId":"119","replacedBy":"133"},{"ruleId":"121","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"135","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":20},{"ruleId":"123","severity":1,"message":"136","line":267,"column":21,"nodeType":"125","messageId":"126","endLine":267,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":331,"column":26,"nodeType":"131","messageId":"132","endLine":331,"endColumn":28},{"ruleId":"123","severity":1,"message":"128","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":56,"column":5,"nodeType":"139","endLine":56,"endColumn":14,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"130","line":75,"column":21,"nodeType":"131","messageId":"132","endLine":75,"endColumn":23},{"ruleId":"123","severity":1,"message":"141","line":2,"column":3,"nodeType":"125","messageId":"126","endLine":2,"endColumn":9},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'PageHeader' is defined but never used.","Identifier","unusedVar","'SideMenu' is defined but never used.","'FormHelperText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["142"],["143"],"'EmployeeForm' is defined but never used.","'setClearForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearForm' and 'setValues'. Either include them or remove the dependency array.","ArrayExpression",["144"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [clearForm, editRow, setValues]",{"range":"147","text":"148"},[1108,1117],"[clearForm, editRow, setValues]"]